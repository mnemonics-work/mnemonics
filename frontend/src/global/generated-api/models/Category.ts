/* tslint:disable */
/* eslint-disable */
/**
 * v2.0 Documentation
 * Swagger Specification
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Category
 */
export interface Category {
    /**
     * 
     * @type {number}
     * @memberof Category
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof Category
     */
    title: string;
    /**
     * 
     * @type {number}
     * @memberof Category
     */
    parentTopic?: number | null;
    /**
     * 
     * @type {Set<number>}
     * @memberof Category
     */
    childTopics: Set<number>;
    /**
     * 
     * @type {Set<number>}
     * @memberof Category
     */
    expressions: Set<number>;
    /**
     * 
     * @type {Set<number>}
     * @memberof Category
     */
    tags?: Set<number>;
}

export function CategoryFromJSON(json: any): Category {
    return CategoryFromJSONTyped(json, false);
}

export function CategoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): Category {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'title': json['title'],
        'parentTopic': !exists(json, 'parent_topic') ? undefined : json['parent_topic'],
        'childTopics': json['child_topics'],
        'expressions': json['expressions'],
        'tags': !exists(json, 'tags') ? undefined : json['tags'],
    };
}

export function CategoryToJSON(value?: Category | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'title': value.title,
        'parent_topic': value.parentTopic,
        'child_topics': value.childTopics,
        'expressions': value.expressions,
        'tags': value.tags,
    };
}


